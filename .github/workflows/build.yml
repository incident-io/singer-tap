name: Build

on: [push]

# We need this so we can tag our repo if the build succeeds and the version
# doesn't match.
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release: '${{ steps.tag.outputs.release }}'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      -
        name: Build
        run: go run cmd/tap-incident/main.go --help
      -
        name: Install ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo
      -
        name: Run tests
        run: ginkgo -tags=integration -r .
        env:
          TEST_INCIDENT_API_KEY: ${{secrets.TEST_INCIDENT_API_KEY}}
      -
        name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      -
        name: Install csv-target dependency
        run: python -m pip install 'target-csv @ git+https://github.com/rliddler/target-csv@master'
      -
        name: Remove the existing genned files
        run: rm integration/testdata/sync/*
      -
        name: Run tap -> target
        env:
          TEST_INCIDENT_API_KEY: ${{secrets.TEST_INCIDENT_API_KEY}}
        run: |
          echo '{"destination_path": "integration/testdata/sync", "timestamp_override": "2023"}' > target-config.json
          echo "{\"api_key\": \"$TEST_INCIDENT_API_KEY\"}" > tap-config.json

          go run cmd/tap-incident/main.go --config tap-config.json --catalog integration/catalog.json | target-csv --config target-config.json
      -
        name: Check tap output has not changed
        run: |
          if [ ! -z "$(git status integration/testdata/sync --porcelain)" ]; then
            git status
            echo
            echo -e '\033[1;93m!!! "tap-incident | target-csv" resulted in changes. Please run those commands locally and commit the changes.\e[0m'
            echo
            git diff
            echo
            exit 1
          fi
      -
        id: tag
        name: Tag if new version
        run: |
          CURRENT_VERSION="v$(cat cmd/tap-incident/cmd/VERSION)"
          if [[ $(git tag -l "${CURRENT_VERSION}") == "${CURRENT_VERSION}" ]]; then
            echo "Version ${CURRENT_VERSION} is already released"
            exit 0
          fi

          git tag "${CURRENT_VERSION}"
          git push --tags
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_PUBLISHER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PUBLISHER_KEY }}
      -
        name: Run GoReleaser
        continue-on-error: true
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
